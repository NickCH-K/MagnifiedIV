% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/groupSearch.R
\name{groupSearch}
\alias{groupSearch}
\title{groupSearch}
\usage{
groupSearch(
  formula,
  data,
  weights,
  ngroups = 4L,
  ntries = 100L,
  id = NULL,
  silent = FALSE,
  ...
)
}
\arguments{
\item{formula}{A formula of the form \code{x ~ z | w1 + w2} where \code{x} is an endogenous variable in an instrumental variables model, being predicted here. \code{z} is one of the instruments, and \code{w1} and \code{w2}, etc., are covariates to be partialed out, if any.}

\item{data}{A data.frame.}

\item{weights}{Estimation weights.}

\item{ngroups}{Number of groups to split the data into.}

\item{ntries}{Number of groupings to attempt.}

\item{id}{A variable in \code{data} that indiates that observations with the same value of \code{id} should always be in the same group.}

\item{silent}{Suppress the progress report.}

\item{...}{Additional arguments to be passed to \code{lm()}. Note that \code{na.action} will be ignored for partialling-out of the covariates, and if you prefer a different \code{na.action} for this purpose you should partial-out by hand before running \code{groupSearch}.}
}
\description{
This function performs the GroupSearch algorithm as in Huntington-Klein (2019) "Instruments with Heterogeneous Effects: Monotonicity, Bias, and Localness."
}
\details{
The GroupSearch algorithm is naive. It simply tries a bunch of random groupings, and for each grouping attempts to predict \code{x} with \code{z}. It returns the grouping that produces the highest F-statistic as a factor vector. Be aware before using \code{groupSearch()} that in the original paper it only did a mediocre job at picking up effect heterogeneity. You may want to use \code{groupCF()} instead.

This function is called by magnifiedIV. You can also run Magnified IV by yourself without the magnifiedIV function (with any estimator) by running groupSearch, then adding the resulting group variable as a control in both IV stages and also interacted with the instrument. Or use \code{factorPull()} to get the individual-level effects estimates and use those to construct a sample weight.
}
\examples{
# Get data
data(CPS1985, package = 'AER')

# Split the data into 10 random groups 100 times, and each time see how the effect of
# education in predicting wages varies across the sample, after controlling
# for all the other variables in the data, plus a squared term on experience.
# Return the group with the largest resulting F statistic.
edeffect <- groupSearch(wage ~ education |
                          experience + I(experience^2) + age + ethnicity +
                          region + gender + occupation +
                          sector + union + married,
                        data = CPS1985, ngroups = 10)

table(edeffect)
}
